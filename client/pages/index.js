import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Header from "./components/Header";
import { useEffect, useState } from "react";
import { ethers } from "ethers";
import JobCard from "./components/JobCard";
import Link from "next/link";

// Contract addr and abi
import JobMarketplace from "../const/JobMarketplace.json";
import config from "../const/JobMarketplaceAddress.json";

export default function Home() {
  const [provider, setProvider] = useState(null);
  const [account, setAccount] = useState(null);
  const [jobMarketplace, setJobMarketplace] = useState(null);
  const [jobs, setJobs] = useState([]);

  const loadBlockchainData = async () => {
    const provider = new ethers.providers.Web3Provider(window.ethereum);

    setProvider(provider);

    const network = await provider.getNetwork();
    const jobMarketplace = new ethers.Contract(
      config[network.chainId].JobMarketplace[0],
      JobMarketplace,
      provider
    );
    setJobMarketplace(jobMarketplace);

    const maxSupply = await jobMarketplace.maxSupply();
    const jobs = [];

    for (var i = 1; i <= maxSupply; i++) {
      const job = await jobMarketplace.getJob(i);
      jobs.push(job);
    }

    setJobs(jobs);

    window.ethereum.on("accountsChanged", async () => {
      const accounts = await window.ethereum.request({
        method: "eth_requestAccounts",
      });
      const account = ethers.utils.getAddress(accounts[0]);
      setAccount(account);
    });
  };

  useEffect(() => {
    loadBlockchainData();
  }, []);

  // console.log(jobs)

  return (
    <div className={styles.container}>
      <Head>
        <title>JobMarket</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header account={account} setAccount={setAccount} />
      <div>
        <div >
          {jobs &&
            jobs.map((job, index) => {
              return (
                <Link href={`/jobs/${job.id}`} key={job.id}>
                  <JobCard job={job} key={index} />
                </Link>
              );
            })}
        </div>
      </div>
    </div>
  );
}
